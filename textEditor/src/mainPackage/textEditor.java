
package mainPackage;



import javax.swing.text.BadLocationException;
import java.awt.Color;
//import java.awt.Component;
//import javax.swing.event.UndoableEditListener;
//import javax.swing.event.UndoableEditEvent;
import javax.swing.undo.UndoManager;
import java.awt.print.PrinterException;
import java.io.FileReader; //eisagwgh aparatetiton vivliothikon
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File; 
import javax.swing.JOptionPane;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.font.TextAttribute;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;



public class textEditor extends javax.swing.JFrame {
  UndoManager undoManager = new UndoManager();
  private String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
  //dhlwsh pinaka Font
  private Font []font;
  
    /**
     * Creates new form textEditor
     */
    public textEditor() {
        initComponents();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
        jFileChooser1.setFileFilter(filter);
        textHere.setSize(800,1100);
        /*orismos ws arxikhs katastashs-->
        tou frame gia thn epilogh twn font*/
        fontsFrame.setVisible(false);
        textHere.setEditorKit(new WrapEditorKit());
        textHere.getDocument().addUndoableEditListener(undoManager); //krataei thn allagh poy ginetai se periptosh pou theloume na kanoume undo
        font=new Font[fonts.length];
        aboutFrame.setVisible(false);
        aboutLabel.setText(   "<html> Το συγκεκριμένο text editor αποτελεί"
                            + "<br>ένα εργαλείο για απλή καθημερινή χρήση."
                            + "<br>"
                            + "<br>Η εφαρμογή δημιουργήθηκε με αφορμή"
                            + "<br>την ανάθεση εργασίας στους φοιτητές"
                            + "<br> Καλούδη Αλέξανδρο και Αποστολίδη Μιχαήλ."
                            + "<br>"
                            + "<br>Σκοπός της εργασίας είναι η πρακτική ενασχόληση"
                            + "<br>με το αντικείμενο του μαθήματος Αλληλεπίδραση"
                            + "<br>Ανθρώπου Μηχανής."
                            + "<br>"
                            + "<br>Το μάθημα διδάσκεται από τον καθηγητή Κεραμόπουλο Ευκλείδη.");
        contactLabel.setText( "<html>Παρακάτω αναγράφονται στοιχεία επικοινωνίας των φοιτητών που συμμετείχαν στην εργασία:"
                            + "<br>"
                            + "<br>Αποστολίδης Μιχαήλ:"
                            + "<br>it175108@it.teithe.gr"
                            + "<br>"
                            + "<br>Καλούδης Αλέξανδρος"
                            + "<br>it185186@it.teithe.gr");
    }
         
  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jFileChooser1 = new javax.swing.JFileChooser();
        ErrorDialog1 = new javax.swing.JDialog();
        PrintErrorDialog = new javax.swing.JDialog();
        RightClickPopUpMenu = new javax.swing.JPopupMenu();
        UndoRClick = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        CutRClick = new javax.swing.JMenuItem();
        CopyRClick = new javax.swing.JMenuItem();
        PasteRClick = new javax.swing.JMenuItem();
        DeleteRClick = new javax.swing.JMenuItem();
        fontsFrame = new javax.swing.JFrame();
        fontLb = new javax.swing.JLabel();
        styleLb = new javax.swing.JLabel();
        sizeLb = new javax.swing.JLabel();
        fontCB = new javax.swing.JComboBox<String>(fonts);
        styleCB = new javax.swing.JComboBox<>();
        sizeCB = new javax.swing.JComboBox<>();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        findTextFrame = new javax.swing.JFrame();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        findTextFrameFindNextButton = new javax.swing.JButton();
        FindTextFrameCancelButton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        replaceTextFrameButton = new javax.swing.JButton();
        aboutFrame = new javax.swing.JFrame();
        aboutLabel = new javax.swing.JLabel("Center", SwingConstants.CENTER);
        pickColor = new javax.swing.JColorChooser();
        contactFrame = new javax.swing.JFrame();
        contactLabel = new javax.swing.JLabel();
        ChooseSaveOrNotDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        YesButton = new javax.swing.JButton();
        NoButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        textHere = new javax.swing.JTextPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        printMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoKey = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        cutKey = new javax.swing.JMenuItem();
        copyKey = new javax.swing.JMenuItem();
        pasteKey = new javax.swing.JMenuItem();
        deleteKey = new javax.swing.JMenuItem();
        FindKey = new javax.swing.JMenuItem();
        formMenu = new javax.swing.JMenu();
        textPropertiesMenu = new javax.swing.JMenu();
        fontItem = new javax.swing.JMenuItem();
        colorPicker = new javax.swing.JMenuItem();
        allignMenu = new javax.swing.JMenu();
        leftItem = new javax.swing.JMenuItem();
        centerItem = new javax.swing.JMenuItem();
        rightItem = new javax.swing.JMenuItem();
        justifiedItem = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        aboutInfo = new javax.swing.JMenuItem();
        contactItem = new javax.swing.JMenuItem();

        ErrorDialog1.setTitle("Error Message");

        javax.swing.GroupLayout ErrorDialog1Layout = new javax.swing.GroupLayout(ErrorDialog1.getContentPane());
        ErrorDialog1.getContentPane().setLayout(ErrorDialog1Layout);
        ErrorDialog1Layout.setHorizontalGroup(
            ErrorDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        ErrorDialog1Layout.setVerticalGroup(
            ErrorDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PrintErrorDialogLayout = new javax.swing.GroupLayout(PrintErrorDialog.getContentPane());
        PrintErrorDialog.getContentPane().setLayout(PrintErrorDialogLayout);
        PrintErrorDialogLayout.setHorizontalGroup(
            PrintErrorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        PrintErrorDialogLayout.setVerticalGroup(
            PrintErrorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        UndoRClick.setText("Undo");
        UndoRClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoRClickActionPerformed(evt);
            }
        });
        RightClickPopUpMenu.add(UndoRClick);
        RightClickPopUpMenu.add(jSeparator2);

        CutRClick.setText("Cut");
        CutRClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutRClickActionPerformed(evt);
            }
        });
        RightClickPopUpMenu.add(CutRClick);

        CopyRClick.setText("Copy");
        CopyRClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyRClickActionPerformed(evt);
            }
        });
        RightClickPopUpMenu.add(CopyRClick);

        PasteRClick.setText("Paste");
        PasteRClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteRClickActionPerformed(evt);
            }
        });
        RightClickPopUpMenu.add(PasteRClick);

        DeleteRClick.setText("Delete");
        DeleteRClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRClickActionPerformed(evt);
            }
        });
        RightClickPopUpMenu.add(DeleteRClick);

        fontsFrame.setTitle("Fonts");
        fontsFrame.setMinimumSize(new java.awt.Dimension(400, 300));
        fontsFrame.setSize(new java.awt.Dimension(500, 450));
        fontsFrame.setType(java.awt.Window.Type.POPUP);
        fontsFrame.getContentPane().setLayout(new java.awt.GridBagLayout());

        fontLb.setText("Font");
        fontsFrame.getContentPane().add(fontLb, new java.awt.GridBagConstraints());

        styleLb.setText("Style");
        fontsFrame.getContentPane().add(styleLb, new java.awt.GridBagConstraints());

        sizeLb.setText("Size");
        fontsFrame.getContentPane().add(sizeLb, new java.awt.GridBagConstraints());

        DefaultComboBoxModel dml= new DefaultComboBoxModel();
        for (int i = 0; i < fonts.length; i++) {
            dml.addElement(fonts[i]);
        }
        fontCB.setModel(dml);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 22;
        gridBagConstraints.ipady = 5;
        fontsFrame.getContentPane().add(fontCB, gridBagConstraints);

        styleCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Default","Bold", "Italic", "Underlined"}));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 7;
        fontsFrame.getContentPane().add(styleCB, gridBagConstraints);

        sizeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8","9","10","11","12","14","16","18","20","22","24","26","28" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        fontsFrame.getContentPane().add(sizeCB, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.weighty = 0.9;
        fontsFrame.getContentPane().add(cancelButton, gridBagConstraints);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        fontsFrame.getContentPane().add(okButton, gridBagConstraints);

        findTextFrame.setTitle("Find");

        jLabel1.setText("Find what:");

        findTextFrameFindNextButton.setText("Find Next");
        findTextFrameFindNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTextFrameFindNextButtonActionPerformed(evt);
            }
        });

        FindTextFrameCancelButton.setText("Cancel");
        FindTextFrameCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindTextFrameCancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Replace with:");

        replaceTextFrameButton.setText("Replace");
        replaceTextFrameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceTextFrameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout findTextFrameLayout = new javax.swing.GroupLayout(findTextFrame.getContentPane());
        findTextFrame.getContentPane().setLayout(findTextFrameLayout);
        findTextFrameLayout.setHorizontalGroup(
            findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findTextFrameLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FindTextFrameCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(findTextFrameLayout.createSequentialGroup()
                        .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(findTextFrameFindNextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(replaceTextFrameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        findTextFrameLayout.setVerticalGroup(
            findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findTextFrameLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(findTextFrameFindNextButton)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(findTextFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(replaceTextFrameButton))
                .addGap(18, 18, 18)
                .addComponent(FindTextFrameCancelButton)
                .addGap(20, 20, 20))
        );

        aboutFrame.setTitle("About");
        aboutFrame.setSize(new java.awt.Dimension(500, 400));

        javax.swing.GroupLayout aboutFrameLayout = new javax.swing.GroupLayout(aboutFrame.getContentPane());
        aboutFrame.getContentPane().setLayout(aboutFrameLayout);
        aboutFrameLayout.setHorizontalGroup(
            aboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(aboutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );
        aboutFrameLayout.setVerticalGroup(
            aboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFrameLayout.createSequentialGroup()
                .addComponent(aboutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 162, Short.MAX_VALUE))
        );

        contactFrame.setTitle("Contact us");
        contactFrame.setForeground(java.awt.Color.black);
        contactFrame.setSize(new java.awt.Dimension(500, 400));

        javax.swing.GroupLayout contactFrameLayout = new javax.swing.GroupLayout(contactFrame.getContentPane());
        contactFrame.getContentPane().setLayout(contactFrameLayout);
        contactFrameLayout.setHorizontalGroup(
            contactFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        contactFrameLayout.setVerticalGroup(
            contactFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contactFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        ChooseSaveOrNotDialog.setTitle("Do you want to save?");

        jLabel3.setText("Do you want to save any changes?");

        YesButton.setText("Yes");
        YesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesButtonActionPerformed(evt);
            }
        });

        NoButton.setText("No");
        NoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ChooseSaveOrNotDialogLayout = new javax.swing.GroupLayout(ChooseSaveOrNotDialog.getContentPane());
        ChooseSaveOrNotDialog.getContentPane().setLayout(ChooseSaveOrNotDialogLayout);
        ChooseSaveOrNotDialogLayout.setHorizontalGroup(
            ChooseSaveOrNotDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChooseSaveOrNotDialogLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(ChooseSaveOrNotDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ChooseSaveOrNotDialogLayout.createSequentialGroup()
                        .addComponent(YesButton)
                        .addGap(33, 33, 33)
                        .addComponent(NoButton)
                        .addGap(18, 18, 18)
                        .addComponent(CancelButton))
                    .addComponent(jLabel3))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        ChooseSaveOrNotDialogLayout.setVerticalGroup(
            ChooseSaveOrNotDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChooseSaveOrNotDialogLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(ChooseSaveOrNotDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YesButton)
                    .addComponent(NoButton)
                    .addComponent(CancelButton))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scroll.setPreferredSize(new java.awt.Dimension(800, 1000));

        textHere.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));
        textHere.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textHere.setMargin(new java.awt.Insets(100, 100, 100, 100));
        textHere.setMaximumSize(new java.awt.Dimension(800, 1100));
        textHere.setMinimumSize(new java.awt.Dimension(200, 500));
        textHere.setName(""); // NOI18N
        textHere.setPreferredSize(new java.awt.Dimension(800, 1000));
        textHere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                textHereMouseReleased(evt);
            }
        });
        textHere.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textHereKeyTyped(evt);
            }
        });
        scroll.setViewportView(textHere);

        fileMenu.setText("File");

        newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        fileMenu.add(jSeparator1);

        printMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        printMenuItem.setText("Print");
        printMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(printMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        undoKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        undoKey.setText("Undo");
        undoKey.setEnabled(false);
        undoKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoKeyActionPerformed(evt);
            }
        });
        editMenu.add(undoKey);
        editMenu.add(jSeparator3);

        cutKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cutKey.setText("Cut");
        cutKey.setEnabled(false);
        cutKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutKeyActionPerformed(evt);
            }
        });
        editMenu.add(cutKey);

        copyKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copyKey.setText("Copy");
        copyKey.setEnabled(false);
        copyKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyKeyActionPerformed(evt);
            }
        });
        editMenu.add(copyKey);

        pasteKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pasteKey.setText("Paste");
        pasteKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteKeyActionPerformed(evt);
            }
        });
        editMenu.add(pasteKey);

        deleteKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        deleteKey.setText("Delete");
        deleteKey.setEnabled(false);
        deleteKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteKeyActionPerformed(evt);
            }
        });
        editMenu.add(deleteKey);

        FindKey.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        FindKey.setText("Find and replace");
        FindKey.setEnabled(false);
        FindKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindKeyActionPerformed(evt);
            }
        });
        editMenu.add(FindKey);

        menuBar.add(editMenu);

        formMenu.setText("Format");

        textPropertiesMenu.setText("Text properties");

        fontItem.setText("Font");
        fontItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontItemActionPerformed(evt);
            }
        });
        textPropertiesMenu.add(fontItem);

        colorPicker.setText("Color");
        colorPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorPickerActionPerformed(evt);
            }
        });
        textPropertiesMenu.add(colorPicker);

        formMenu.add(textPropertiesMenu);

        allignMenu.setText("Text alignment");

        leftItem.setText("Left-aligned");
        leftItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftItemActionPerformed(evt);
            }
        });
        allignMenu.add(leftItem);

        centerItem.setText("Center-aligned");
        centerItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centerItemActionPerformed(evt);
            }
        });
        allignMenu.add(centerItem);

        rightItem.setText("Right-aligned");
        rightItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightItemActionPerformed(evt);
            }
        });
        allignMenu.add(rightItem);

        justifiedItem.setText("Justified");
        justifiedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                justifiedItemActionPerformed(evt);
            }
        });
        allignMenu.add(justifiedItem);

        formMenu.add(allignMenu);

        menuBar.add(formMenu);

        aboutMenu.setText("About");

        aboutInfo.setText("Info");
        aboutInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutInfoActionPerformed(evt);
            }
        });
        aboutMenu.add(aboutInfo);

        contactItem.setText("Contact");
        contactItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactItemActionPerformed(evt);
            }
        });
        aboutMenu.add(contactItem);

        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        FileReader fs;
        int openFile = jFileChooser1.showOpenDialog(this);//me to showOpenDialog anoigw to parathiro gia epilgi Open
        if(openFile == JFileChooser.APPROVE_OPTION){
            
            String fileName = jFileChooser1.getSelectedFile().getPath(); //tha apothikeusei sthn metavliti filename to arxeio me to path pou epileksame
                try{
                    fs = new FileReader(fileName); 
                    textHere.read(fs,null);
                    setTitle(fileName); //allazei titlo symfona me to arxeio.Deixnei to plires path kai onoma toy arxeiou 
                    fs.close();
                    
                } catch(IOException exc){
                  JOptionPane.showMessageDialog(super.rootPane, "Error",
                    "textEditor", JOptionPane.ERROR_MESSAGE);
                }
        }
          
         
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:    
        FileWriter fw;
        int saveFile = jFileChooser1.showSaveDialog(this);
        if(saveFile == JFileChooser.APPROVE_OPTION){
            File fileName = jFileChooser1.getSelectedFile();              
            try{
                fw = new FileWriter(fileName);
                textHere.write(fw); 
                fw.close();
            }catch(IOException exc){
                JOptionPane.showMessageDialog(super.rootPane, "Error",
                "textEditor", JOptionPane.ERROR_MESSAGE);//pop up parathiro me exception alla den mporw na vrw pws leitourgei
            }
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void printMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printMenuItemActionPerformed
        //Print file
        try {
            boolean complete = textHere.print();
            if (complete) {
                /* show a success message  */
                JOptionPane.showMessageDialog(super.rootPane, "The file was printed succefully",
                "textEditor", JOptionPane.PLAIN_MESSAGE);
            } else {
                /*show a message indicating that printing was cancelled */
                JOptionPane.showMessageDialog(super.rootPane, "Printing was canceled!",
               "textEditor", JOptionPane.ERROR_MESSAGE);
            }
        } catch (PrinterException pe) {
            /* Printing failed, report to the user */
            JOptionPane.showMessageDialog(super.rootPane, "Printing failed!!!",
            "textEditor", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_printMenuItemActionPerformed

    private void cutKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutKeyActionPerformed
        //cut
        if(textHere.getSelectedText()!=null)
            cutKey.setEnabled(true);
        textHere.cut();
    }//GEN-LAST:event_cutKeyActionPerformed

    private void copyKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyKeyActionPerformed
        //copy
        if(textHere.getSelectedText()!=null)
            copyKey.setEnabled(true);
        textHere.copy();
    }//GEN-LAST:event_copyKeyActionPerformed

    private void pasteKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteKeyActionPerformed
        //paste 
        textHere.paste();       
    }//GEN-LAST:event_pasteKeyActionPerformed

    private void deleteKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteKeyActionPerformed
        //delete
        if(textHere.getSelectedText()!=null)
            deleteKey.setEnabled(true);
        textHere.setText(textHere.getText().replace(textHere.getSelectedText(),""));
    }//GEN-LAST:event_deleteKeyActionPerformed

    private void undoKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoKeyActionPerformed
        //undo
        if (undoManager.canUndo()) {
          undoManager.undo();
        }

    }//GEN-LAST:event_undoKeyActionPerformed

    private void DeleteRClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRClickActionPerformed
        //delete on right click
        if(textHere.getSelectedText()!=null)
            DeleteRClick.setEnabled(true);
        textHere.setText(textHere.getText().replace(textHere.getSelectedText(),""));
    }//GEN-LAST:event_DeleteRClickActionPerformed

    private void PasteRClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteRClickActionPerformed
        //paste
        textHere.paste();
    }//GEN-LAST:event_PasteRClickActionPerformed

    private void CopyRClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyRClickActionPerformed
        //copy
        if(textHere.getSelectedText()!=null)
            CopyRClick.setEnabled(true);
        textHere.copy();
    }//GEN-LAST:event_CopyRClickActionPerformed

    private void CutRClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutRClickActionPerformed
        //cut
        if(textHere.getSelectedText()!=null)
            CutRClick.setEnabled(true);
        textHere.cut();
    }//GEN-LAST:event_CutRClickActionPerformed

    private void UndoRClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoRClickActionPerformed
        //  undoKeyActionPerformed(evt); //kalei tin arxikh methodo

        if (undoManager.canUndo()) {  //to kanei apo thn arxh
            undoManager.undo();
        }
    }//GEN-LAST:event_UndoRClickActionPerformed

    private void fontItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontItemActionPerformed
        //otan o xrhsths kanei click sthn epilogh font tote anoigei to frame gia thn epilogh twn font
        fontsFrame.setVisible(true);
        fontsFrame.setSize(200,200);       
    }//GEN-LAST:event_fontItemActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        fontsFrame.setVisible(false);//kruvei to frame
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
 
        String styleItem=styleCB.getSelectedItem().toString();//styl grammatoseiras
        int letterSize=Integer.parseInt(sizeCB.getSelectedItem().toString());//mege8os grammatoseiras
        //loop ston pinaka me ta font Strings
        for (int i=0;i<fonts.length;i++) {
            switch (styleItem) {
                //metatroph se bold
                case "Bold":
                    font[i]=new Font(fonts[i],Font.BOLD,letterSize);
                    break;
                //metatroph se italic
                case "Italic":
                    font[i]=new Font(fonts[i],Font.ITALIC,letterSize);
                    break;
                //metatroph se underlined
                case "Underlined":
                    font[i]=new Font(fonts[i],Font.PLAIN,letterSize);
                    Map<TextAttribute, Object> map = new HashMap<TextAttribute, Object>();
                    map.put(TextAttribute.FONT, font[i]);
                    map.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
                    font[i] = Font.getFont(map);
                    textHere.setFont(font[i]);
                    break;
                default:
                    font[i]=new Font(fonts[i],Font.PLAIN,letterSize);
                    break;
            }
        }
        
        int fontIdx =fontCB.getSelectedIndex();
         
        //kryvoume to frame
        fontsFrame.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void FindKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindKeyActionPerformed

        findTextFrame.setVisible(true);
        findTextFrame.setSize(400,200);
        
    }//GEN-LAST:event_FindKeyActionPerformed

    private void FindTextFrameCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindTextFrameCancelButtonActionPerformed

        findTextFrame.setVisible(false);
        
        
    }//GEN-LAST:event_FindTextFrameCancelButtonActionPerformed

    int currentPointer=0;
    private void findTextFrameFindNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTextFrameFindNextButtonActionPerformed
        // TODO add your handling code here:       
        String findFromText = textHere.getText(); // bazoume se metaviliti to keimeno
        String toFindText = jTextField1.getText(); // bazoume thn leksi poy psaxnoume      
        int indexOf = findFromText.indexOf(toFindText,currentPointer);
        int length = toFindText.length();
        Highlighter h = textHere.getHighlighter();
        h.removeAllHighlights();
        try{
            h.addHighlight(indexOf, indexOf + length, new DefaultHighlighter.DefaultHighlightPainter(Color.yellow));
        }
        catch(BadLocationException ex){}
        currentPointer = indexOf + length;
        if(currentPointer >= findFromText.length()){
            currentPointer = 0;
        }
        if(findFromText.indexOf(toFindText,currentPointer)== -1){
            currentPointer=0;
        }
    }//GEN-LAST:event_findTextFrameFindNextButtonActionPerformed

    private void replaceTextFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceTextFrameButtonActionPerformed
        String findFromText = textHere.getText();
        String toFindText = jTextField1.getText();
        String withReplaceText =jTextField2.getText();
        textHere.setText(findFromText.replaceFirst(toFindText, withReplaceText));
        currentPointer=0;
    }//GEN-LAST:event_replaceTextFrameButtonActionPerformed

    private void leftItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftItemActionPerformed
        /*Otan o xrhsths epilegei apo to dropdownn menu
        thn epilogh left align tote to keimeno stoixizetai pros ta aristera*/
        StyledDocument style = textHere.getStyledDocument();
        SimpleAttributeSet align= new SimpleAttributeSet();
        StyleConstants.setAlignment(align, StyleConstants.ALIGN_LEFT);
        style.setParagraphAttributes(0, style.getLength(), align, false);
        
        
    }//GEN-LAST:event_leftItemActionPerformed

    private void textHereMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textHereMouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger()){
            RightClickPopUpMenu.show(this,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_textHereMouseReleased

    private void rightItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightItemActionPerformed
         /*Otan o xrhsths epilegei apo to dropdownn menu
        thn epilogh left align tote to keimeno stoixizetai pros ta deksia*/
        StyledDocument style = textHere.getStyledDocument();
        SimpleAttributeSet align= new SimpleAttributeSet();
        StyleConstants.setAlignment(align, StyleConstants.ALIGN_RIGHT);
        style.setParagraphAttributes(0, style.getLength(), align, false);
    }//GEN-LAST:event_rightItemActionPerformed

    private void centerItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centerItemActionPerformed
         /*Otan o xrhsths epilegei apo to dropdownn menu
        thn epilogh left align tote to keimeno stoixizetai sto kentro*/
        StyledDocument style = textHere.getStyledDocument();
        SimpleAttributeSet align= new SimpleAttributeSet();
        StyleConstants.setAlignment(align, StyleConstants.ALIGN_CENTER);
        style.setParagraphAttributes(0, style.getLength(), align, false);
    }//GEN-LAST:event_centerItemActionPerformed

    private void justifiedItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_justifiedItemActionPerformed
         /*Otan o xrhsths epilegei apo to dropdownn menu
        thn epilogh left align tote to keimeno stoixizetai plhrws*/
        StyledDocument style = textHere.getStyledDocument();
        SimpleAttributeSet align= new SimpleAttributeSet();
        StyleConstants.setAlignment(align, StyleConstants.ALIGN_JUSTIFIED);
        style.setParagraphAttributes(0, style.getLength(), align, false);
    }//GEN-LAST:event_justifiedItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        ChooseSaveOrNotDialog.setVisible(true);
        ChooseSaveOrNotDialog.setSize(400,200);
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void colorPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorPickerActionPerformed
        
        Color newColor=pickColor.showDialog(this,"Choose Text Color",Color.black);
        textHere.setForeground(newColor);
    }//GEN-LAST:event_colorPickerActionPerformed

    private void aboutInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutInfoActionPerformed
        aboutFrame.setVisible(true);
    }//GEN-LAST:event_aboutInfoActionPerformed

    private void contactItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactItemActionPerformed
        contactFrame.setVisible(true);
    }//GEN-LAST:event_contactItemActionPerformed

    private void YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesButtonActionPerformed
        
        saveMenuItemActionPerformed(evt); // kalei thn save method gia na swseis to arxeio
        ChooseSaveOrNotDialog.dispose();
        //ChooseSaveOrNotDialog.setVisible(false);
    }//GEN-LAST:event_YesButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed

        ChooseSaveOrNotDialog.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoButtonActionPerformed

        textHere.setText(null);
        ChooseSaveOrNotDialog.dispose();
    }//GEN-LAST:event_NoButtonActionPerformed

    private void textHereKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textHereKeyTyped
        
        if(!textHere.getText().equals("")){
            undoKey.setEnabled(true);
            cutKey.setEnabled(true);
            copyKey.setEnabled(true);
            deleteKey.setEnabled(true);
            FindKey.setEnabled(true);
        }else{
            undoKey.setEnabled(false);
            cutKey.setEnabled(false);
            copyKey.setEnabled(false);
            deleteKey.setEnabled(false);
            FindKey.setEnabled(false);
        }
    }//GEN-LAST:event_textHereKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(textEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(textEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(textEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(textEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new textEditor().setVisible(true);

            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JDialog ChooseSaveOrNotDialog;
    private javax.swing.JMenuItem CopyRClick;
    private javax.swing.JMenuItem CutRClick;
    private javax.swing.JMenuItem DeleteRClick;
    private javax.swing.JDialog ErrorDialog1;
    private javax.swing.JMenuItem FindKey;
    private javax.swing.JButton FindTextFrameCancelButton;
    private javax.swing.JButton NoButton;
    private javax.swing.JMenuItem PasteRClick;
    private javax.swing.JDialog PrintErrorDialog;
    private javax.swing.JPopupMenu RightClickPopUpMenu;
    private javax.swing.JMenuItem UndoRClick;
    private javax.swing.JButton YesButton;
    private javax.swing.JFrame aboutFrame;
    private javax.swing.JMenuItem aboutInfo;
    private javax.swing.JLabel aboutLabel;
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenu allignMenu;
    private javax.swing.JButton cancelButton;
    private javax.swing.JMenuItem centerItem;
    private javax.swing.JMenuItem colorPicker;
    private javax.swing.JFrame contactFrame;
    private javax.swing.JMenuItem contactItem;
    private javax.swing.JLabel contactLabel;
    private javax.swing.JMenuItem copyKey;
    private javax.swing.JMenuItem cutKey;
    private javax.swing.JMenuItem deleteKey;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JFrame findTextFrame;
    private javax.swing.JButton findTextFrameFindNextButton;
    private javax.swing.JComboBox<String> fontCB;
    private javax.swing.JMenuItem fontItem;
    private javax.swing.JLabel fontLb;
    private javax.swing.JFrame fontsFrame;
    private javax.swing.JMenu formMenu;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem justifiedItem;
    private javax.swing.JMenuItem leftItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JButton okButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteKey;
    private javax.swing.JColorChooser pickColor;
    private javax.swing.JMenuItem printMenuItem;
    private javax.swing.JButton replaceTextFrameButton;
    private javax.swing.JMenuItem rightItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JComboBox<String> sizeCB;
    private javax.swing.JLabel sizeLb;
    private javax.swing.JComboBox<String> styleCB;
    private javax.swing.JLabel styleLb;
    private javax.swing.JTextPane textHere;
    private javax.swing.JMenu textPropertiesMenu;
    private javax.swing.JMenuItem undoKey;
    // End of variables declaration//GEN-END:variables
}
